{"version":3,"sources":["../../src/adapters/node.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAGO,IAAM,sCAAe,SAAf,YAAe;MAAE;MAAO;SAAY,iBAAW;QAAT,gBAAS;;qBAC1B,IAAI,KAAJ,CAAU,GAAV,EAD0B;;;;QACnD,0BADmD;;QACzC,sCAAS,kBADgC;;;AAG1D,UAAM,QAAN,CAAe,8BAAgB;AAC7B,wBAD6B;AAE7B,cAAQ,OAAO,MAAP,GAAgB,CAAhB,SAAwB,MAAxB,GAAmC,EAAnC;KAFK,CAAf,EAH0D;;AAQ1D,WAAO,OAAP,CAAe;aAAS,MAAM,QAAN,CAAe,uBAAS,KAAT,CAAf;KAAT,CAAf,CAR0D;GAAX;CAArB","file":"node.js","sourcesContent":["import {restoreLocation, addRoute} from '../actions';\n\n\nexport const locationNode = ({store, routes}) => ({url}) => {\n  const [pathname, search = ''] = url.split('?');\n\n  store.dispatch(restoreLocation({\n    pathname,\n    search: search.length > 0 ? `?${search}` : ''\n  }));\n\n  routes.forEach(route => store.dispatch(addRoute(route)));\n};\n"]}