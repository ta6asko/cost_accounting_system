{
  "name": "autolink-js",
  "version": "1.0.1",
  "description": "Tiny little tool to find URLs in a string of text and hyperlink them",
  "main": "autolink-min.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "open test/suite.html"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bryanwoods/autolink-js.git"
  },
  "author": {
    "name": "Bryan Woods"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bryanwoods/autolink-js/issues"
  },
  "homepage": "https://github.com/bryanwoods/autolink-js#readme",
  "gitHead": "fd46223be0ec57179d1b00cebbd42e25bdf9022c",
  "readme": "## autolink-js\n\nautolink-js is a small (about half a kilobyte), simple, and tested JavaScript tool that takes\na string of text, finds URLs within it, and hyperlinks them.\n\n### Why bother releasing such a tiny little method?\n\nI recently needed to find and hyperlink URLs in user-submitted text\nand was surprised to find that doing what seemed like such a simple task wasn't already a\nSolved Problem. Different regex solutions led to different unwanted side\neffects, and other utilities were far, far more complex and feature rich\nthan I needed.\n\n### Basic Usage\n\nautolink-js adds an autoLink() method to JavaScript's String prototype,\nso you can use it on any JavaScript string. Take a look at the tests,\nbut essentially, after including either autolink.js or autolink-min.js\nto your page, it works like this:\n\n```javascript\n// Input\n\"This is a link to Google http://google.com\".autoLink()\n\n// Output\n\"This is a link to Google <a href='http://google.com'>http://google.com</a>\"\n```\n\n### Additional Options\n\nYou can pass any additional HTML attributes to the anchor tag with a JavaScript object, like this:\n\n```javascript\n// Input\n\"This is a link to Google http://google.com\".autoLink({ target: \"_blank\", rel: \"nofollow\", id: \"1\" })\n\n// Output\n\"This is a link to Google <a href='http://google.com' target='_blank' rel='nofollow' id='1'>http://google.com</a>\"\n```\n\n#### Callback\n\nCallback option can be used to redefine how links will be rendered.\n\n```javascript\n// Input\n\"This is a link to image http://example.com/logo.png\".autoLink({\n  callback: function(url) {\n    return /\\.(gif|png|jpe?g)$/i.test(url) ? '<img src=\"' + url + '\">' : null;\n  }\n});\n\n// Output\n\"This is a link to image <img src='http://example.com/logo.png'>\"\n```\n\n### Example\n\nOpen example/example.html in your web browser and view the source for a simple but\nfull-featured example of using with jQuery.\n\n### Running the tests\n\nAfter cloning this repository, simply open test/suite.html in your web\nbrowser. The tests will run automatically.\n",
  "readmeFilename": "README.md",
  "_id": "autolink-js@1.0.1",
  "_shasum": "487850d5df6842b5a93b5d960ede75d69cee4beb",
  "_from": "bryanwoods/autolink-js#master",
  "_resolved": "git://github.com/bryanwoods/autolink-js.git#fd46223be0ec57179d1b00cebbd42e25bdf9022c"
}
